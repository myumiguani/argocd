# This is a basic workflow to help you get started with Actions

name: api-deployment-runtime-fabric

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashfiles('**/pom.xml') }}
          restore-key: |
            ${{ runner.os }}-maven-
            
      - name: set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: "8"

      - name: add repo credentials
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "mule-enterprise",
              "username": "mikeyumi",
              "password": "@@@@Warcarft1234"
            }]

      - name: print logs
        run: mvn help:effective-settings

      - name: build with maven
        run: |
          pwd
          mvn -B package --file apis/american-flights-api/pom.xml
          ls apis/american-flights-api
          
      - name: stamp artifact
        run: |
          artifactName1=$(ls apis/american-flights-api/target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls apis/american-flights-api/target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1  $artifactName2

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: artifact
          path: apis/american-flights-api/target/*.jar
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashfiles('**/pom.xml') }}
          restore-key: |
            ${{ runner.os }}-maven-
            
      - uses: actions/download-artifact@master
        with:
          name: artifact
          path: apis/american-flights-api
          
      - name: deploy to Sandbox
        env: 
          ID: "41b9450c63ee4d7996be1f5f1bde72a4"
          SECRET: "80b9C96173124E38BDd787834c8aFc8F"
        run: |
          pwd
          cd apis/american-flights-api
          # artifactName=$(ls *.jar | head -1)
          artifactName="american-flights-api"
          echo $artifactName
          mvn deploy -DmuleDeploy -e \
            -Dmule.artifact=$artifactName \
            # -Dclient.id="$ID" \
            # -Dclient.secret="$SECRET" \
            -Denv=Sandbox 
            # -Danypoint.username="$USERNAME" \
            # -Danypoint.password="$PASSWORD" \
            # -Dmaven.surefire.debug 
